import streamlit as st
import streamlit_antd_components as sac
import random
from streamlit_feedback import streamlit_feedback

def run():
    st.title("‡∏£‡πà‡∏≤‡∏á‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏ö‡∏±‡∏ç‡∏ç‡∏±‡∏ï‡∏¥‡∏õ‡πà‡∏≤‡∏™‡∏á‡∏ß‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥")
    st.write("‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏ö‡∏±‡∏ç‡∏ç‡∏±‡∏ï‡∏¥‡∏õ‡πà‡∏≤‡∏™‡∏á‡∏ß‡∏ô‡πÅ‡∏´‡πà‡∏á‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏û.‡∏®. 2507 ‡∏°‡∏µ‡∏ö‡∏ó‡∏ö‡∏±‡∏ç‡∏ç‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏Ç‡∏±‡∏î‡∏Å‡∏±‡∏ö‡∏£‡∏±‡∏ê‡∏ò‡∏£‡∏£‡∏°‡∏ô‡∏π‡∏ç‡πÑ‡∏ó‡∏¢‡πÉ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏ä‡∏∏‡∏°‡∏ä‡∏ô ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏û‡∏¥‡∏û‡∏≤‡∏ó‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ê ‡∏£‡∏±‡∏ê‡∏Ñ‡∏ß‡∏£‡∏ä‡πà‡∏ß‡∏¢‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏Ç‡∏ï‡∏õ‡πà‡∏≤‡∏™‡∏á‡∏ß‡∏ô ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏Å‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏ú‡∏¥‡∏î‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô‡∏°‡∏µ‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏≠‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏±‡∏ê‡∏ò‡∏£‡∏£‡∏°‡∏ô‡∏π‡∏ç‡πÅ‡∏•‡∏∞‡∏™‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏£‡∏¥‡∏á ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏ö‡∏±‡∏ç‡∏ç‡∏±‡∏ï‡∏¥‡∏ô‡∏µ‡πâ")

    sac.steps(
        items=[
            sac.StepsItem(title='‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡πà‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç', description='‡πÇ‡∏î‡∏¢ ‡∏™‡∏™.', disabled=True),
            sac.StepsItem(title='‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£', disabled=True),
            sac.StepsItem(title='‡∏ö‡∏£‡∏£‡∏à‡∏∏‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏†‡∏≤', disabled=True),
        ], index=3, color='green'
    )
    sac.steps(
        items=[
            sac.StepsItem(title='‡∏™‡∏™. ‡∏ß‡∏≤‡∏£‡∏∞ 1', description='‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£', disabled=True),
            sac.StepsItem(title='‡∏™‡∏™. ‡∏ß‡∏≤‡∏£‡∏∞ 2', description='‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏£‡∏≤‡∏¢‡∏°‡∏≤‡∏ï‡∏£‡∏≤', disabled=True),
            sac.StepsItem(title='‡∏™‡∏™. ‡∏ß‡∏≤‡∏£‡∏∞ 3', description='‡∏•‡∏á‡∏°‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏â‡∏ö‡∏±‡∏ö', disabled=True),
        ], index=3, color='green'
    )
    sac.steps(
        items=[
            sac.StepsItem(title='‡∏™‡∏ß. ‡∏ß‡∏≤‡∏£‡∏∞ 1', description='‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£', disabled=True),
            sac.StepsItem(title='‡∏™‡∏ß. ‡∏ß‡∏≤‡∏£‡∏∞ 2', description='‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏£‡∏≤‡∏¢‡∏°‡∏≤‡∏ï‡∏£‡∏≤', disabled=True),
            sac.StepsItem(title='‡∏™‡∏ß. ‡∏ß‡∏≤‡∏£‡∏∞ 3', description='‡∏•‡∏á‡∏°‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏â‡∏ö‡∏±‡∏ö', disabled=True),
        ], index=3, color='green'
    )

    # Add buttons in the same line
    col1, col2 = st.columns([1, 1])
    with col1:
        st.link_button("Open Link to Read More", "https://www.parliament.go.th/section77/survey_detail.php?id=396")
    with col2:
        if st.button("Summary by AI"):
            st.experimental_set_query_params(page="summary")
            st.experimental_rerun()

    # List of random Thai names and comments about ‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏°‡∏£‡∏™‡πÄ‡∏ó‡πà‡∏≤‡πÄ‡∏ó‡∏µ‡∏¢‡∏°
    thai_names = ["‡∏™‡∏°‡∏ä‡∏≤‡∏¢", "‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á", "‡∏ô‡∏û‡∏û‡∏£", "‡∏à‡∏¥‡∏£‡∏≤‡∏†‡∏£‡∏ì‡πå", "‡∏Å‡∏¥‡∏ï‡∏ï‡∏¥", "‡∏à‡∏≤‡∏£‡∏∏‡∏ß‡∏£‡∏£‡∏ì"]
    thai_comments = [
        "‡∏ú‡∏°‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏õ‡πà‡∏≤‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô",
        "‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏õ‡πà‡∏≤‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏∏‡∏£‡∏±‡∏Å‡∏©‡πå‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡πÑ‡∏î‡πâ‡∏î‡∏µ‡∏¢‡∏¥‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô",
        "‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏õ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏°‡∏≤‡∏ô‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡∏™‡∏π‡∏ç‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå",
        "‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏õ‡πà‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ä‡∏µ‡∏ß‡∏†‡∏≤‡∏û",
        "‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏õ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡πâ‡∏≤‡∏ß‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏£‡∏±‡∏Å‡∏©‡πå‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏±‡πà‡∏á‡∏¢‡∏∑‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏¥‡πÄ‡∏ß‡∏®",
        "‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏õ‡πà‡∏≤‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏∏‡∏Å‡∏ä‡∏ô‡∏¥‡∏î‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏î‡∏µ"
    ]

    # Generate a list of 5 initial comments
    if 'comments' not in st.session_state:
        st.session_state.comments = [
            {"name": random.choice(thai_names), "text": random.choice(thai_comments), "thumbs_up": random.randint(1, 100), "thumbs_down": random.randint(1, 100)}
            for _ in range(5)
        ]

    # Function to display comments
    def display_comments():
        for i, comment in enumerate(st.session_state.comments):
            st.markdown(f"""
            <div style="border: 1px solid #e1e1e1; padding: 10px; border-radius: 5px; margin-bottom: 10px;">
                <strong>{comment['name']}</strong>: {comment['text']}
                <div style="display: flex; align-items: center; gap: 10px;">
                    <span>üëç {comment['thumbs_up']}</span>
                    <span>üëé {comment['thumbs_down']}</span>
                </div>
            </div>
            """, unsafe_allow_html=True)
            feedback = streamlit_feedback(feedback_type="thumbs", align="flex-start", key=f"feedback_{i}")
            if feedback:
                if feedback == "üëç":
                    st.session_state.comments[i]["thumbs_up"] += 1
                elif feedback == "üëé":
                    st.session_state.comments[i]["thumbs_down"] += 1
                st.experimental_rerun()

    # Display existing comments
    st.subheader("Comments")
    display_comments()

    # Comment input section
    st.subheader("Add a Comment")
    name = "‡∏ô‡∏≤‡∏¢ ‡∏£‡∏±‡∏ê‡∏™‡∏†‡∏≤ ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™"
    st.markdown(f"**Commenting as:** {name}")
    comment_text = st.text_area("Comment")

    # Button to submit the comment
    if st.button("Submit Comment"):
        if comment_text:
            new_comment = {"name": name, "text": comment_text, "thumbs_up": 0, "thumbs_down": 0}
            st.session_state.comments.append(new_comment)
            # Clear input fields after submission
            st.experimental_rerun()
        else:
            st.warning("Please enter a comment before submitting.")

    if st.button("‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å"):
        st.experimental_set_query_params(page="home")
        st.experimental_rerun()

if __name__ == "__main__":
    run()
